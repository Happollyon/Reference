
import static java.lang.Double.max;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author fagnernunes
 */
public class AppFrame extends javax.swing.JFrame {
    ArrayList<Reference>  references = new ArrayList<Reference>();
    /**
     * Creates new form AppFrame
     */
    public AppFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        typeSelected = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        author = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        year = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        title = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        edition = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        place = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Jornaltitle = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        volume = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        radomBtn = new javax.swing.JButton();
        displayBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reference App");

        jLabel2.setText("Author");

        typeSelected.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "book", "jornal" }));
        typeSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeSelectedActionPerformed(evt);
            }
        });

        jLabel3.setText("Select type");

        author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorActionPerformed(evt);
            }
        });

        jLabel4.setText("Year");

        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });

        jLabel5.setText("Title");

        title.setToolTipText("");
        title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleActionPerformed(evt);
            }
        });

        jLabel6.setText("Edition");

        edition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editionActionPerformed(evt);
            }
        });

        jLabel7.setText("Place");

        place.setToolTipText("");
        place.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeActionPerformed(evt);
            }
        });

        jLabel8.setText("Journal title");

        Jornaltitle.setToolTipText("");
        Jornaltitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JornaltitleActionPerformed(evt);
            }
        });

        jLabel9.setText("volume");

        volume.setToolTipText("");
        volume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeActionPerformed(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(102, 255, 102));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plus.png"))); // NOI18N
        addBtn.setText("Add");
        addBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        radomBtn.setBackground(new java.awt.Color(204, 204, 255));
        radomBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/random.png"))); // NOI18N
        radomBtn.setText("Random");
        radomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radomBtnActionPerformed(evt);
            }
        });

        displayBtn.setBackground(new java.awt.Color(204, 204, 255));
        displayBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all.png"))); // NOI18N
        displayBtn.setText("Display");
        displayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(255, 204, 255));
        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diskette.png"))); // NOI18N
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Author", "year", "Title", "edition", "Place", "Journal title", "Volume"
            }
        ));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(edition, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))
                    .addComponent(place, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8))
                    .addComponent(Jornaltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(volume, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(addBtn)))
                .addGap(0, 80, Short.MAX_VALUE)
                .addComponent(displayBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radomBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveBtn)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(typeSelected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(author, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))
                            .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5))
                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 898, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel3)
                    .addContainerGap(863, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeSelected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(place, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Jornaltitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(volume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addBtn)
                            .addComponent(displayBtn)
                            .addComponent(radomBtn)
                            .addComponent(saveBtn))))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(63, 63, 63)
                    .addComponent(jLabel3)
                    .addContainerGap(547, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeSelectedActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_typeSelectedActionPerformed

    private void authorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorActionPerformed

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearActionPerformed

    private void titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleActionPerformed

    private void editionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editionActionPerformed

    private void placeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_placeActionPerformed

    private void JornaltitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JornaltitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JornaltitleActionPerformed

    private void volumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_volumeActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        
        
        
        // checks if the item entered is book or jornal 
        if("book"==typeSelected.getSelectedItem())
        {   // if its a book 
            
            // alerts user that Jornal title cant be added 
            // sets jornal title to empty 
            if(!Jornaltitle.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this,
                                    "Book dont Have Jornal tile.",
                                    " Field is empyt now. ",
                                    JOptionPane.ERROR_MESSAGE);
                Jornaltitle.setText("");
            }else{
                //checks if all fields  have bem filled and alerts the user if not
                if(author.getText().isEmpty()||year.getText().isEmpty()||title.getText().isEmpty()||edition.getText().isEmpty()||place.getText().isEmpty()||volume.getText().isEmpty())
                {
                     JOptionPane.showMessageDialog(this,
                     "fill all fields!","ERROR!",
                     JOptionPane.ERROR_MESSAGE);
                }else{
                    // if all fields are correctly filled
                   
                    //Objec is created 
                    Reference r1 = new Reference();
                    //gets the last item id
                    int id=0;
                    
                    // checks if there are items in list to avoid errors
                    if(references.size()!=0){
                    id = references.get(references.size()-1).getId();
                    id = id +1;
                    
                    }else{
                        id = 1;
                    }
                    
                    r1.setId(id); // increments id
                    
                    // adds appropriates values 
                    r1.setAutor(author.getText());
                    r1.setEdition(edition.getText());
                    r1.setYear(year.getText());
                    r1.setVolume(volume.getText());
                    r1.setJornalTitle(Jornaltitle.getText());
                    r1.setTitle(title.getText());
                    r1.setPlace(place.getText());
                    
                    // add object to List
                    references.add(r1);
                    
                    // Allerts user that item has added 
                    JOptionPane.showMessageDialog(this,
                    "Item added!","Success!",
                    JOptionPane.PLAIN_MESSAGE);
                    
                    }
                    
            }
        }else{// if its jornal
            
            // makes sure the unessessary fiels are empty and alerts the user 
            if(!edition.getText().isEmpty()||!place.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this,
                                    "Jornal dont Have edition or place.",
                                    " Fields are empyt now. ",
                                    JOptionPane.ERROR_MESSAGE);
                
                // empties the unessessary fields
                edition.setText("");
                place.setText("");
                
                
            }else{
                
                // makes sure the nessessaries fields are filled 
                if(author.getText().isEmpty()||year.getText().isEmpty()||title.getText().isEmpty()||volume.getText().isEmpty()||Jornaltitle.getText().isEmpty())
                {       
                     // Alerts the user 
                     JOptionPane.showMessageDialog(this,
                     "fill all fields!","ERROR!",
                     JOptionPane.ERROR_MESSAGE);
                }else{
                     Reference r1 = new Reference();
                     //gets the last item id
                    int id=0;
                    
                    // checks if there are items in list to avoid errors
                    if(references.size()!=0){
                    id = references.get(references.size()-1).getId();
                    id = id +1;
                    
                    }else{
                        id = 1;
                    }
                    
                    r1.setId(id); // increments id
                    r1.setAutor(author.getText());
                    r1.setEdition(edition.getText());
                    r1.setYear(year.getText());
                    r1.setVolume(volume.getText());
                    r1.setJornalTitle(Jornaltitle.getText());
                    r1.setTitle(title.getText());
                    r1.setPlace(place.getText());
                    
                    // adds items to List
                    references.add(r1);
                    // lets the user know the item was added 
                    JOptionPane.showMessageDialog(this,
                    "Item added!","Success!",
                    JOptionPane.ERROR_MESSAGE);
                    
                
                }
                
            }}
        
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void radomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radomBtnActionPerformed
            // TODO add your handling code here:
            
            // this function selects a random item 
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        int max = references.size();
        // generate random number
        int random = (int) (Math.random() * (max - 0) + 0);
        
        System.out.println(random);
        
        //display random row
        model.addRow(new Object[]{references.get(random).getId(),references.get(random).getAutor(), references.get(random).getYear(), references.get(random).getTitle(), references.get(random).getEdition(),references.get(random).getPlace(),references.get(random).getJornalTitle(),references.get(random).getVolume()});
        
    }//GEN-LAST:event_radomBtnActionPerformed

    private void displayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        
        for (Reference f : references){

           model.addRow(new Object[]{f.getId(),f.getAutor(), f.getYear(), f.getTitle(), f.getEdition(),f.getPlace(),f.getJornalTitle(),f.getVolume()});
                   
        }
    }//GEN-LAST:event_displayBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Jornaltitle;
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField author;
    private javax.swing.JButton displayBtn;
    private javax.swing.JTextField edition;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField place;
    private javax.swing.JButton radomBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTable table;
    private javax.swing.JTextField title;
    private javax.swing.JComboBox<String> typeSelected;
    private javax.swing.JTextField volume;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
